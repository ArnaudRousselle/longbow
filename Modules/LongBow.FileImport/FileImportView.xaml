<UserControl
	x:Class="LongBow.FileImport.FileImportView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:fileImport="clr-namespace:LongBow.FileImport"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:interactionRequest="http://www.codeplex.com/prism"
	xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
	xmlns:bankPluginSelectionService="clr-namespace:LongBow.FileImport.Services.BankPluginSelectionService"
	xmlns:windows="clr-namespace:LongBow.Controls.Windows;assembly=LongBow.Controls"
	xmlns:searchBilling="clr-namespace:LongBow.FileImport.SearchBilling"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	mc:Ignorable="d"
	d:DesignHeight="600"
	d:DesignWidth="1100"
	d:DataContext="{d:DesignInstance Type=fileImport:DesignFileImportViewModel, IsDesignTimeCreatable=True}">
	<UserControl.Resources>
		<CollectionViewSource
			x:Key="DataLinesSource"
			Source="{Binding DataLines}">
			<CollectionViewSource.GroupDescriptions>
				<PropertyGroupDescription
					PropertyName="AccountId" />
			</CollectionViewSource.GroupDescriptions>
			<CollectionViewSource.SortDescriptions>
				<componentModel:SortDescription
					PropertyName="Date" />
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>
		<ObjectDataProvider
			x:Key="DataFromTitleFieldEnum"
			MethodName="GetValues"
			ObjectType="{x:Type system:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type
					TypeName="fileImport:TitleField" />
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>
		<Style
			TargetType="{x:Type ListViewItem}">
			<Setter
				Property="HorizontalContentAlignment"
				Value="Stretch" />
			<Setter
				Property="Foreground"
				Value="White" />
			<Style.Triggers>
				<DataTrigger
					Binding="{Binding SelectedMatching.Checked}"
					Value="True">
					<Setter
						Property="Foreground"
						Value="LightGray" />
				</DataTrigger>
				<Trigger
					Property="IsSelected"
					Value="True">
					<Setter
						Property="Background"
						Value="#202020" />
				</Trigger>
				<Trigger
					Property="IsMouseOver"
					Value="True">
					<Setter
						Property="Background"
						Value="#000000" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style
			TargetType="{x:Type TextBlock}"
			x:Key="TextBlockStyle">
			<Style.Triggers>
				<DataTrigger
					Binding="{Binding CompleteMatching}"
					Value="True">
					<Setter
						Property="Foreground"
						Value="Green" />
				</DataTrigger>
				<DataTrigger
					Binding="{Binding CompleteMatching}"
					Value="False">
					<Setter
						Property="Foreground"
						Value="Orange" />
				</DataTrigger>
				<DataTrigger
					Binding="{Binding NewItem}"
					Value="True">
					<Setter
						Property="Foreground"
						Value="Gray" />
					<Setter
						Property="FontStyle"
						Value="Italic" />
				</DataTrigger>
				<DataTrigger
					Binding="{Binding OtherItem}"
					Value="True">
					<Setter
						Property="Foreground"
						Value="Gray" />
					<Setter
						Property="FontStyle"
						Value="Italic" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
	</UserControl.Resources>
	<i:Interaction.Triggers>
		<interactionRequest:InteractionRequestTrigger
			SourceObject="{Binding SearchBillingRequest, Mode=OneWay}">
			<windows:MetroPopupWindowAction
				IsModal="True"
				CenterOverAssociatedObject="True">
				<windows:MetroPopupWindowAction.WindowContent>
					<searchBilling:SearchBillingView />
				</windows:MetroPopupWindowAction.WindowContent>
			</windows:MetroPopupWindowAction>
		</interactionRequest:InteractionRequestTrigger>
		<interactionRequest:InteractionRequestTrigger
			SourceObject="{Binding BankPluginSelectionRequest, Mode=OneWay}">
			<windows:MetroPopupWindowAction
				IsModal="True"
				CenterOverAssociatedObject="True">
				<windows:MetroPopupWindowAction.WindowContent>
					<bankPluginSelectionService:BankPluginSelectionView />
				</windows:MetroPopupWindowAction.WindowContent>
			</windows:MetroPopupWindowAction>
		</interactionRequest:InteractionRequestTrigger>
		<interactionRequest:InteractionRequestTrigger
			SourceObject="{Binding NotificationRequest, Mode=OneWay}">
			<windows:MetroPopupWindowAction
				IsModal="True"
				CenterOverAssociatedObject="True" />
		</interactionRequest:InteractionRequestTrigger>
	</i:Interaction.Triggers>
	<DockPanel>
		<StackPanel
			DockPanel.Dock="Top"
			Margin="5"
			Orientation="Horizontal">
			<TextBlock
				VerticalAlignment="Center"
				Margin="15,3,0,0">Champ du libellé</TextBlock>
			<ComboBox
				Margin="5,0,0,0"
				ItemsSource="{Binding Source={StaticResource DataFromTitleFieldEnum}}"
				SelectedItem="{Binding TitleField}"
				IsSynchronizedWithCurrentItem="True" />
			<TextBlock
				VerticalAlignment="Center"
				Margin="20,3,0,0">Différé ?</TextBlock>
			<CheckBox
				Margin="5,5,0,0"
				x:Name="DelayedCheckBox"
				IsChecked="{Binding Delayed}" />
			<TextBlock
				VerticalAlignment="Center"
				Margin="20,3,0,0">Date de valeur</TextBlock>
			<DatePicker
				Margin="5,0,0,0"
				SelectedDate="{Binding ValuationDate}"
				IsEnabled="{Binding ElementName=DelayedCheckBox, Path=IsChecked}" />
		</StackPanel>
		<ListView
			ItemsSource="{Binding Source={StaticResource DataLinesSource}}">
			<ListView.GroupStyle>
				<GroupStyle>
					<GroupStyle.ContainerStyle>
						<Style
							TargetType="{x:Type GroupItem}">
							<Setter
								Property="Template">
								<Setter.Value>
									<ControlTemplate>
										<Expander
											IsExpanded="True">
											<Expander.Header>
												<StackPanel
													Orientation="Horizontal">
													<TextBlock
														Text="{Binding Name, StringFormat=Compte {0}}"
														FontWeight="Bold"
														VerticalAlignment="Bottom" />
												</StackPanel>
											</Expander.Header>
											<ItemsPresenter />
										</Expander>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</GroupStyle.ContainerStyle>
				</GroupStyle>
			</ListView.GroupStyle>
			<ListView.View>
				<GridView>
					<GridViewColumn
						Header="Date"
						Width="110">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock
									Text="{Binding Date, StringFormat=dd/MM/yyyy}"
									TextAlignment="Center" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn
						Header="Libellé"
						Width="250"
						DisplayMemberBinding="{Binding Name}" />
					<GridViewColumn
						Header="Mémo"
						Width="250"
						DisplayMemberBinding="{Binding Memo}" />
					<GridViewColumn
						Header="Montant"
						Width="80">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock
									Text="{Binding Amount, StringFormat=0.00}"
									TextAlignment="Right" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn
						Header="Liaisons"
						Width="450">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<ComboBox
									ItemsSource="{Binding Matchings}"
									SelectedItem="{Binding SelectedMatching}"
									IsSynchronizedWithCurrentItem="True">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<TextBlock
												Text="{Binding Label}"
												FontWeight="Bold"
												Style="{StaticResource TextBlockStyle}" />
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn
						Width="80">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Button
									Command="{Binding DataContext.ExecuteActionForDataLineCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
									CommandParameter="{Binding}"
									Content="Action">
									<Button.Style>
										<Style
											TargetType="{x:Type Button}">
											<Setter
												Property="Visibility"
												Value="Collapsed" />
											<Style.Triggers>
												<DataTrigger
													Binding="{Binding SelectedMatching.Checked}"
													Value="False">
													<Setter
														Property="Visibility"
														Value="Visible" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Button.Style>
								</Button>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
				</GridView>
			</ListView.View>
		</ListView>
	</DockPanel>
</UserControl>
